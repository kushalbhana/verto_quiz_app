// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Quiz {
  id          String     @id @default(cuid())
  title       String
  description String?
  duration    Int        @default(300) // seconds
  questions   Question[]
  submissions Submission[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@map("quizzes")
}

model Question {
  id                 String   @id @default(cuid())
  quizId             String
  quiz               Quiz     @relation(fields: [quizId], references: [id], onDelete: Cascade)
  text               String
  options            String[] // JSON array of options
  correctOptionIndex Int
  order              Int
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  @@map("questions")
  @@index([quizId])
}

model Submission {
  id        String   @id @default(cuid())
  quizId    String
  quiz      Quiz     @relation(fields: [quizId], references: [id], onDelete: Cascade)
  answers   Json     // Store as JSON: { questionId: selectedIndex }
  score     Int
  totalQuestions Int
  createdAt DateTime @default(now())

  @@map("submissions")
  @@index([quizId])
}